atlas website > collections > create database button > name task_manager > collection categories > click create button
create another collection in same database > tasks
categories > insert document > key value pair
tasks > insert document > key value pairs, first same as categories

pip3 install flask
setup app.py file with intial code
import os
from flask import Flask

app = Flask(__name__)


@app.route('/')
def hello():
    return 'Hello World ...again'


if __name__ == '__main__':
    app.run(host=os.environ.get('IP'),
            port=int(os.environ.get('PORT')),
            debug=True)

heroku website > create new app 
CLI > heroku login -i > heroku apps
push to GI > add remote with: heroku git:remote -a task-manager-dlymer         this came from heroku page
pip3 freeze --local > requirements.txt
git add, commit, push
echo web: python app.py > Procfile
git add, commit, push
git push heroku master
heroku ps:scale web=1
back to heroku website > settings > reveal config vars > IP 0.0.0.0 PORT 5000 > Open app button at top of page should deploy app in browser

pip3 install flask-pymongo
pip3 install dnspython
edited app.py file to connect to these

back to mongodb atlas webpage > overview > connect > connect your application >copy link > patse link into app.py replacing password and database name >